// <auto-generated />
// This file was generated by a T4 template.
// Don't change it directly as your change would get overwritten.  Instead, make changes
// to the .tt file (i.e. the T4 template) and save it to regenerate this file.

// Make sure the compiler doesn't complain about missing Xml comments
#pragma warning disable 1591
#region T4MVC

using System;
using System.Diagnostics;
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.CompilerServices;
using System.Web;
using System.Web.Hosting;
using System.Web.Mvc;
using System.Web.Mvc.Ajax;
using System.Web.Mvc.Html;
using System.Web.Routing;
using T4MVC;
namespace scrilla.Web.Controllers
{
    public partial class AccountController
    {
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected AccountController(Dummy d) { }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToAction(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoute(callInfo.RouteValueDictionary);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        protected RedirectToRouteResult RedirectToActionPermanent(ActionResult result)
        {
            var callInfo = result.GetT4MVCResult();
            return RedirectToRoutePermanent(callInfo.RouteValueDictionary);
        }

        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult SetBudget()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetBudget);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Reconcile()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Reconcile);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChangeCategory()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeCategory);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChangeVendor()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeVendor);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult ChangeDate()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeDate);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Category()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Category);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddCategoryPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddCategoryPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditCategory()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditCategory);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditCategoryPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditCategoryPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteCategory()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteCategory);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Vendor()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Vendor);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddVendorPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddVendorPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditVendor()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditVendor);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditVendorPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditVendorPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteVendor()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteVendor);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteVendorMap()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteVendorMap);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult Bill()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Bill);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult BillTransactions()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BillTransactions);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult AddBillPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddBillPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditBill()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditBill);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditBillPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditBillPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult DeleteBill()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteBill);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditBillTransactionPaidStatus()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditBillTransactionPaidStatus);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult EditBillTransactionPost()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditBillTransactionPost);
        }
        [NonAction]
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public virtual System.Web.Mvc.ActionResult UploadTransactions()
        {
            return new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadTransactions);
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public AccountController Actions { get { return MVC.Account; } }
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Area = "";
        [GeneratedCode("T4MVC", "2.0")]
        public readonly string Name = "Account";
        [GeneratedCode("T4MVC", "2.0")]
        public const string NameConst = "Account";

        static readonly ActionNamesClass s_actions = new ActionNamesClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionNamesClass ActionNames { get { return s_actions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNamesClass
        {
            public readonly string NotFound = "NotFound";
            public readonly string Error = "Error";
            public readonly string Accounts = "Accounts";
            public readonly string Budget = "Budget";
            public readonly string SetBudget = "SetBudget";
            public readonly string Transactions = "Transactions";
            public readonly string Reconcile = "Reconcile";
            public readonly string ChangeCategory = "ChangeCategory";
            public readonly string ChangeVendor = "ChangeVendor";
            public readonly string ChangeDate = "ChangeDate";
            public readonly string Categories = "Categories";
            public readonly string Category = "Category";
            public readonly string AddCategory = "AddCategory";
            public readonly string AddCategoryPost = "AddCategoryPost";
            public readonly string EditCategory = "EditCategory";
            public readonly string EditCategoryPost = "EditCategoryPost";
            public readonly string DeleteCategory = "DeleteCategory";
            public readonly string Vendors = "Vendors";
            public readonly string Vendor = "Vendor";
            public readonly string AddVendor = "AddVendor";
            public readonly string AddVendorPost = "AddVendorPost";
            public readonly string EditVendor = "EditVendor";
            public readonly string EditVendorPost = "EditVendorPost";
            public readonly string DeleteVendor = "DeleteVendor";
            public readonly string DeleteVendorMap = "DeleteVendorMap";
            public readonly string Bills = "Bills";
            public readonly string Bill = "Bill";
            public readonly string BillTransactions = "BillTransactions";
            public readonly string AddBill = "AddBill";
            public readonly string AddBillPost = "AddBillPost";
            public readonly string EditBill = "EditBill";
            public readonly string EditBillPost = "EditBillPost";
            public readonly string DeleteBill = "DeleteBill";
            public readonly string EditBillTransactionPaidStatus = "EditBillTransactionPaidStatus";
            public readonly string EditBillTransactionPost = "EditBillTransactionPost";
            public readonly string UploadTransactions = "UploadTransactions";
        }

        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionNameConstants
        {
            public const string NotFound = "NotFound";
            public const string Error = "Error";
            public const string Accounts = "Accounts";
            public const string Budget = "Budget";
            public const string SetBudget = "SetBudget";
            public const string Transactions = "Transactions";
            public const string Reconcile = "Reconcile";
            public const string ChangeCategory = "ChangeCategory";
            public const string ChangeVendor = "ChangeVendor";
            public const string ChangeDate = "ChangeDate";
            public const string Categories = "Categories";
            public const string Category = "Category";
            public const string AddCategory = "AddCategory";
            public const string AddCategoryPost = "AddCategoryPost";
            public const string EditCategory = "EditCategory";
            public const string EditCategoryPost = "EditCategoryPost";
            public const string DeleteCategory = "DeleteCategory";
            public const string Vendors = "Vendors";
            public const string Vendor = "Vendor";
            public const string AddVendor = "AddVendor";
            public const string AddVendorPost = "AddVendorPost";
            public const string EditVendor = "EditVendor";
            public const string EditVendorPost = "EditVendorPost";
            public const string DeleteVendor = "DeleteVendor";
            public const string DeleteVendorMap = "DeleteVendorMap";
            public const string Bills = "Bills";
            public const string Bill = "Bill";
            public const string BillTransactions = "BillTransactions";
            public const string AddBill = "AddBill";
            public const string AddBillPost = "AddBillPost";
            public const string EditBill = "EditBill";
            public const string EditBillPost = "EditBillPost";
            public const string DeleteBill = "DeleteBill";
            public const string EditBillTransactionPaidStatus = "EditBillTransactionPaidStatus";
            public const string EditBillTransactionPost = "EditBillTransactionPost";
            public const string UploadTransactions = "UploadTransactions";
        }


        static readonly ActionParamsClass_Accounts s_params_Accounts = new ActionParamsClass_Accounts();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Accounts AccountsParams { get { return s_params_Accounts; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Accounts
        {
            public readonly string from = "from";
            public readonly string to = "to";
        }
        static readonly ActionParamsClass_Budget s_params_Budget = new ActionParamsClass_Budget();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Budget BudgetParams { get { return s_params_Budget; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Budget
        {
            public readonly string accountId = "accountId";
            public readonly string month = "month";
            public readonly string from = "from";
            public readonly string to = "to";
        }
        static readonly ActionParamsClass_SetBudget s_params_SetBudget = new ActionParamsClass_SetBudget();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_SetBudget SetBudgetParams { get { return s_params_SetBudget; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_SetBudget
        {
            public readonly string month = "month";
            public readonly string categoryId = "categoryId";
            public readonly string amount = "amount";
        }
        static readonly ActionParamsClass_Transactions s_params_Transactions = new ActionParamsClass_Transactions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Transactions TransactionsParams { get { return s_params_Transactions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Transactions
        {
            public readonly string accountId = "accountId";
            public readonly string vendorId = "vendorId";
            public readonly string categoryId = "categoryId";
            public readonly string from = "from";
            public readonly string to = "to";
        }
        static readonly ActionParamsClass_Reconcile s_params_Reconcile = new ActionParamsClass_Reconcile();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Reconcile ReconcileParams { get { return s_params_Reconcile; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Reconcile
        {
            public readonly string transactionId = "transactionId";
            public readonly string isReconciled = "isReconciled";
        }
        static readonly ActionParamsClass_ChangeCategory s_params_ChangeCategory = new ActionParamsClass_ChangeCategory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeCategory ChangeCategoryParams { get { return s_params_ChangeCategory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeCategory
        {
            public readonly string transactionId = "transactionId";
            public readonly string categoryId = "categoryId";
        }
        static readonly ActionParamsClass_ChangeVendor s_params_ChangeVendor = new ActionParamsClass_ChangeVendor();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeVendor ChangeVendorParams { get { return s_params_ChangeVendor; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeVendor
        {
            public readonly string transactionId = "transactionId";
            public readonly string vendorId = "vendorId";
        }
        static readonly ActionParamsClass_ChangeDate s_params_ChangeDate = new ActionParamsClass_ChangeDate();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_ChangeDate ChangeDateParams { get { return s_params_ChangeDate; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_ChangeDate
        {
            public readonly string transactionId = "transactionId";
            public readonly string date = "date";
        }
        static readonly ActionParamsClass_Categories s_params_Categories = new ActionParamsClass_Categories();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Categories CategoriesParams { get { return s_params_Categories; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Categories
        {
            public readonly string accountId = "accountId";
            public readonly string from = "from";
            public readonly string to = "to";
            public readonly string transfers = "transfers";
        }
        static readonly ActionParamsClass_Category s_params_Category = new ActionParamsClass_Category();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Category CategoryParams { get { return s_params_Category; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Category
        {
            public readonly string categoryId = "categoryId";
        }
        static readonly ActionParamsClass_AddCategoryPost s_params_AddCategoryPost = new ActionParamsClass_AddCategoryPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddCategoryPost AddCategoryPostParams { get { return s_params_AddCategoryPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddCategoryPost
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_EditCategory s_params_EditCategory = new ActionParamsClass_EditCategory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditCategory EditCategoryParams { get { return s_params_EditCategory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditCategory
        {
            public readonly string categoryId = "categoryId";
        }
        static readonly ActionParamsClass_EditCategoryPost s_params_EditCategoryPost = new ActionParamsClass_EditCategoryPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditCategoryPost EditCategoryPostParams { get { return s_params_EditCategoryPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditCategoryPost
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_DeleteCategory s_params_DeleteCategory = new ActionParamsClass_DeleteCategory();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteCategory DeleteCategoryParams { get { return s_params_DeleteCategory; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteCategory
        {
            public readonly string categoryId = "categoryId";
        }
        static readonly ActionParamsClass_Vendors s_params_Vendors = new ActionParamsClass_Vendors();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Vendors VendorsParams { get { return s_params_Vendors; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Vendors
        {
            public readonly string from = "from";
            public readonly string to = "to";
        }
        static readonly ActionParamsClass_Vendor s_params_Vendor = new ActionParamsClass_Vendor();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Vendor VendorParams { get { return s_params_Vendor; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Vendor
        {
            public readonly string vendorId = "vendorId";
        }
        static readonly ActionParamsClass_AddVendorPost s_params_AddVendorPost = new ActionParamsClass_AddVendorPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddVendorPost AddVendorPostParams { get { return s_params_AddVendorPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddVendorPost
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_EditVendor s_params_EditVendor = new ActionParamsClass_EditVendor();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditVendor EditVendorParams { get { return s_params_EditVendor; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditVendor
        {
            public readonly string vendorId = "vendorId";
        }
        static readonly ActionParamsClass_EditVendorPost s_params_EditVendorPost = new ActionParamsClass_EditVendorPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditVendorPost EditVendorPostParams { get { return s_params_EditVendorPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditVendorPost
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_DeleteVendor s_params_DeleteVendor = new ActionParamsClass_DeleteVendor();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteVendor DeleteVendorParams { get { return s_params_DeleteVendor; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteVendor
        {
            public readonly string vendorId = "vendorId";
        }
        static readonly ActionParamsClass_DeleteVendorMap s_params_DeleteVendorMap = new ActionParamsClass_DeleteVendorMap();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteVendorMap DeleteVendorMapParams { get { return s_params_DeleteVendorMap; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteVendorMap
        {
            public readonly string vendorMapId = "vendorMapId";
        }
        static readonly ActionParamsClass_Bill s_params_Bill = new ActionParamsClass_Bill();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_Bill BillParams { get { return s_params_Bill; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_Bill
        {
            public readonly string billId = "billId";
        }
        static readonly ActionParamsClass_BillTransactions s_params_BillTransactions = new ActionParamsClass_BillTransactions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_BillTransactions BillTransactionsParams { get { return s_params_BillTransactions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_BillTransactions
        {
            public readonly string billId = "billId";
            public readonly string from = "from";
            public readonly string to = "to";
        }
        static readonly ActionParamsClass_AddBillPost s_params_AddBillPost = new ActionParamsClass_AddBillPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_AddBillPost AddBillPostParams { get { return s_params_AddBillPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_AddBillPost
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_EditBill s_params_EditBill = new ActionParamsClass_EditBill();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditBill EditBillParams { get { return s_params_EditBill; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditBill
        {
            public readonly string billId = "billId";
        }
        static readonly ActionParamsClass_EditBillPost s_params_EditBillPost = new ActionParamsClass_EditBillPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditBillPost EditBillPostParams { get { return s_params_EditBillPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditBillPost
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_DeleteBill s_params_DeleteBill = new ActionParamsClass_DeleteBill();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_DeleteBill DeleteBillParams { get { return s_params_DeleteBill; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_DeleteBill
        {
            public readonly string billId = "billId";
        }
        static readonly ActionParamsClass_EditBillTransactionPaidStatus s_params_EditBillTransactionPaidStatus = new ActionParamsClass_EditBillTransactionPaidStatus();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditBillTransactionPaidStatus EditBillTransactionPaidStatusParams { get { return s_params_EditBillTransactionPaidStatus; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditBillTransactionPaidStatus
        {
            public readonly string billTransactionId = "billTransactionId";
            public readonly string isPaid = "isPaid";
            public readonly string transactionId = "transactionId";
        }
        static readonly ActionParamsClass_EditBillTransactionPost s_params_EditBillTransactionPost = new ActionParamsClass_EditBillTransactionPost();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_EditBillTransactionPost EditBillTransactionPostParams { get { return s_params_EditBillTransactionPost; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_EditBillTransactionPost
        {
            public readonly string viewModel = "viewModel";
        }
        static readonly ActionParamsClass_UploadTransactions s_params_UploadTransactions = new ActionParamsClass_UploadTransactions();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ActionParamsClass_UploadTransactions UploadTransactionsParams { get { return s_params_UploadTransactions; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ActionParamsClass_UploadTransactions
        {
            public readonly string file = "file";
        }
        static readonly ViewsClass s_views = new ViewsClass();
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public ViewsClass Views { get { return s_views; } }
        [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
        public class ViewsClass
        {
            static readonly _ViewNamesClass s_ViewNames = new _ViewNamesClass();
            public _ViewNamesClass ViewNames { get { return s_ViewNames; } }
            public class _ViewNamesClass
            {
                public readonly string Accounts = "Accounts";
                public readonly string AddEditBill = "AddEditBill";
                public readonly string AddEditCategory = "AddEditCategory";
                public readonly string AddEditVendor = "AddEditVendor";
                public readonly string Bill = "Bill";
                public readonly string Bills = "Bills";
                public readonly string BillTransactions = "BillTransactions";
                public readonly string Budget = "Budget";
                public readonly string Categories = "Categories";
                public readonly string Category = "Category";
                public readonly string Transactions = "Transactions";
                public readonly string Vendor = "Vendor";
                public readonly string Vendors = "Vendors";
            }
            public readonly string Accounts = "~/Views/Account/Accounts.cshtml";
            public readonly string AddEditBill = "~/Views/Account/AddEditBill.cshtml";
            public readonly string AddEditCategory = "~/Views/Account/AddEditCategory.cshtml";
            public readonly string AddEditVendor = "~/Views/Account/AddEditVendor.cshtml";
            public readonly string Bill = "~/Views/Account/Bill.cshtml";
            public readonly string Bills = "~/Views/Account/Bills.cshtml";
            public readonly string BillTransactions = "~/Views/Account/BillTransactions.cshtml";
            public readonly string Budget = "~/Views/Account/Budget.cshtml";
            public readonly string Categories = "~/Views/Account/Categories.cshtml";
            public readonly string Category = "~/Views/Account/Category.cshtml";
            public readonly string Transactions = "~/Views/Account/Transactions.cshtml";
            public readonly string Vendor = "~/Views/Account/Vendor.cshtml";
            public readonly string Vendors = "~/Views/Account/Vendors.cshtml";
        }
    }

    [GeneratedCode("T4MVC", "2.0"), DebuggerNonUserCode]
    public partial class T4MVC_AccountController : scrilla.Web.Controllers.AccountController
    {
        public T4MVC_AccountController() : base(Dummy.Instance) { }

        partial void NotFoundOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult NotFound()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.NotFound);
            NotFoundOverride(callInfo);
            return callInfo;
        }

        partial void ErrorOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult Error()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Error);
            ErrorOverride(callInfo);
            return callInfo;
        }

        partial void AccountsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string from, string to);

        public override System.Web.Mvc.ActionResult Accounts(string from, string to)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Accounts);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "from", from);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "to", to);
            AccountsOverride(callInfo, from, to);
            return callInfo;
        }

        partial void BudgetOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? accountId, string month, string from, string to);

        public override System.Web.Mvc.ActionResult Budget(int? accountId, string month, string from, string to)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Budget);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "accountId", accountId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "month", month);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "from", from);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "to", to);
            BudgetOverride(callInfo, accountId, month, from, to);
            return callInfo;
        }

        partial void SetBudgetOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.DateTime month, int categoryId, decimal amount);

        public override System.Web.Mvc.ActionResult SetBudget(System.DateTime month, int categoryId, decimal amount)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.SetBudget);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "month", month);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "amount", amount);
            SetBudgetOverride(callInfo, month, categoryId, amount);
            return callInfo;
        }

        partial void TransactionsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? accountId, string vendorId, string categoryId, string from, string to);

        public override System.Web.Mvc.ActionResult Transactions(int? accountId, string vendorId, string categoryId, string from, string to)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Transactions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "accountId", accountId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vendorId", vendorId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "from", from);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "to", to);
            TransactionsOverride(callInfo, accountId, vendorId, categoryId, from, to);
            return callInfo;
        }

        partial void ReconcileOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int transactionId, bool isReconciled);

        public override System.Web.Mvc.ActionResult Reconcile(int transactionId, bool isReconciled)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Reconcile);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "transactionId", transactionId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isReconciled", isReconciled);
            ReconcileOverride(callInfo, transactionId, isReconciled);
            return callInfo;
        }

        partial void ChangeCategoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int transactionId, int categoryId);

        public override System.Web.Mvc.ActionResult ChangeCategory(int transactionId, int categoryId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeCategory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "transactionId", transactionId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            ChangeCategoryOverride(callInfo, transactionId, categoryId);
            return callInfo;
        }

        partial void ChangeVendorOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int transactionId, int vendorId);

        public override System.Web.Mvc.ActionResult ChangeVendor(int transactionId, int vendorId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeVendor);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "transactionId", transactionId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vendorId", vendorId);
            ChangeVendorOverride(callInfo, transactionId, vendorId);
            return callInfo;
        }

        partial void ChangeDateOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int transactionId, System.DateTime date);

        public override System.Web.Mvc.ActionResult ChangeDate(int transactionId, System.DateTime date)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.ChangeDate);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "transactionId", transactionId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "date", date);
            ChangeDateOverride(callInfo, transactionId, date);
            return callInfo;
        }

        partial void CategoriesOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? accountId, string from, string to, string transfers);

        public override System.Web.Mvc.ActionResult Categories(int? accountId, string from, string to, string transfers)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Categories);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "accountId", accountId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "from", from);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "to", to);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "transfers", transfers);
            CategoriesOverride(callInfo, accountId, from, to, transfers);
            return callInfo;
        }

        partial void CategoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int categoryId);

        public override System.Web.Mvc.ActionResult Category(int categoryId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Category);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            CategoryOverride(callInfo, categoryId);
            return callInfo;
        }

        partial void AddCategoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult AddCategory()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddCategory);
            AddCategoryOverride(callInfo);
            return callInfo;
        }

        partial void AddCategoryPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, scrilla.Web.Controllers.ViewModels.AddEditCategoryViewModel viewModel);

        public override System.Web.Mvc.ActionResult AddCategoryPost(scrilla.Web.Controllers.ViewModels.AddEditCategoryViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddCategoryPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            AddCategoryPostOverride(callInfo, viewModel);
            return callInfo;
        }

        partial void EditCategoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int categoryId);

        public override System.Web.Mvc.ActionResult EditCategory(int categoryId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditCategory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            EditCategoryOverride(callInfo, categoryId);
            return callInfo;
        }

        partial void EditCategoryPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, scrilla.Web.Controllers.ViewModels.AddEditCategoryViewModel viewModel);

        public override System.Web.Mvc.ActionResult EditCategoryPost(scrilla.Web.Controllers.ViewModels.AddEditCategoryViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditCategoryPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            EditCategoryPostOverride(callInfo, viewModel);
            return callInfo;
        }

        partial void DeleteCategoryOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int categoryId);

        public override System.Web.Mvc.ActionResult DeleteCategory(int categoryId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteCategory);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "categoryId", categoryId);
            DeleteCategoryOverride(callInfo, categoryId);
            return callInfo;
        }

        partial void VendorsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, string from, string to);

        public override System.Web.Mvc.ActionResult Vendors(string from, string to)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Vendors);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "from", from);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "to", to);
            VendorsOverride(callInfo, from, to);
            return callInfo;
        }

        partial void VendorOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int vendorId);

        public override System.Web.Mvc.ActionResult Vendor(int vendorId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Vendor);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vendorId", vendorId);
            VendorOverride(callInfo, vendorId);
            return callInfo;
        }

        partial void AddVendorOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult AddVendor()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddVendor);
            AddVendorOverride(callInfo);
            return callInfo;
        }

        partial void AddVendorPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, scrilla.Web.Controllers.ViewModels.AddEditVendorViewModel viewModel);

        public override System.Web.Mvc.ActionResult AddVendorPost(scrilla.Web.Controllers.ViewModels.AddEditVendorViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddVendorPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            AddVendorPostOverride(callInfo, viewModel);
            return callInfo;
        }

        partial void EditVendorOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int vendorId);

        public override System.Web.Mvc.ActionResult EditVendor(int vendorId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditVendor);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vendorId", vendorId);
            EditVendorOverride(callInfo, vendorId);
            return callInfo;
        }

        partial void EditVendorPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, scrilla.Web.Controllers.ViewModels.AddEditVendorViewModel viewModel);

        public override System.Web.Mvc.ActionResult EditVendorPost(scrilla.Web.Controllers.ViewModels.AddEditVendorViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditVendorPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            EditVendorPostOverride(callInfo, viewModel);
            return callInfo;
        }

        partial void DeleteVendorOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int vendorId);

        public override System.Web.Mvc.ActionResult DeleteVendor(int vendorId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteVendor);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vendorId", vendorId);
            DeleteVendorOverride(callInfo, vendorId);
            return callInfo;
        }

        partial void DeleteVendorMapOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int vendorMapId);

        public override System.Web.Mvc.ActionResult DeleteVendorMap(int vendorMapId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteVendorMap);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "vendorMapId", vendorMapId);
            DeleteVendorMapOverride(callInfo, vendorMapId);
            return callInfo;
        }

        partial void BillsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult Bills()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Bills);
            BillsOverride(callInfo);
            return callInfo;
        }

        partial void BillOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int billId);

        public override System.Web.Mvc.ActionResult Bill(int billId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.Bill);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "billId", billId);
            BillOverride(callInfo, billId);
            return callInfo;
        }

        partial void BillTransactionsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int? billId, string from, string to);

        public override System.Web.Mvc.ActionResult BillTransactions(int? billId, string from, string to)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.BillTransactions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "billId", billId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "from", from);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "to", to);
            BillTransactionsOverride(callInfo, billId, from, to);
            return callInfo;
        }

        partial void AddBillOverride(T4MVC_System_Web_Mvc_ActionResult callInfo);

        public override System.Web.Mvc.ActionResult AddBill()
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddBill);
            AddBillOverride(callInfo);
            return callInfo;
        }

        partial void AddBillPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, scrilla.Web.Controllers.ViewModels.AddEditBillViewModel viewModel);

        public override System.Web.Mvc.ActionResult AddBillPost(scrilla.Web.Controllers.ViewModels.AddEditBillViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.AddBillPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            AddBillPostOverride(callInfo, viewModel);
            return callInfo;
        }

        partial void EditBillOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int billId);

        public override System.Web.Mvc.ActionResult EditBill(int billId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditBill);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "billId", billId);
            EditBillOverride(callInfo, billId);
            return callInfo;
        }

        partial void EditBillPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, scrilla.Web.Controllers.ViewModels.AddEditBillViewModel viewModel);

        public override System.Web.Mvc.ActionResult EditBillPost(scrilla.Web.Controllers.ViewModels.AddEditBillViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditBillPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            EditBillPostOverride(callInfo, viewModel);
            return callInfo;
        }

        partial void DeleteBillOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int billId);

        public override System.Web.Mvc.ActionResult DeleteBill(int billId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.DeleteBill);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "billId", billId);
            DeleteBillOverride(callInfo, billId);
            return callInfo;
        }

        partial void EditBillTransactionPaidStatusOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, int billTransactionId, bool isPaid, int? transactionId);

        public override System.Web.Mvc.ActionResult EditBillTransactionPaidStatus(int billTransactionId, bool isPaid, int? transactionId)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditBillTransactionPaidStatus);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "billTransactionId", billTransactionId);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "isPaid", isPaid);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "transactionId", transactionId);
            EditBillTransactionPaidStatusOverride(callInfo, billTransactionId, isPaid, transactionId);
            return callInfo;
        }

        partial void EditBillTransactionPostOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, scrilla.Web.Controllers.ViewModels.EditBillTransactionViewModel viewModel);

        public override System.Web.Mvc.ActionResult EditBillTransactionPost(scrilla.Web.Controllers.ViewModels.EditBillTransactionViewModel viewModel)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.EditBillTransactionPost);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "viewModel", viewModel);
            EditBillTransactionPostOverride(callInfo, viewModel);
            return callInfo;
        }

        partial void UploadTransactionsOverride(T4MVC_System_Web_Mvc_ActionResult callInfo, System.Web.HttpPostedFileBase file);

        public override System.Web.Mvc.ActionResult UploadTransactions(System.Web.HttpPostedFileBase file)
        {
            var callInfo = new T4MVC_System_Web_Mvc_ActionResult(Area, Name, ActionNames.UploadTransactions);
            ModelUnbinderHelpers.AddRouteValues(callInfo.RouteValueDictionary, "file", file);
            UploadTransactionsOverride(callInfo, file);
            return callInfo;
        }

    }
}

#endregion T4MVC
#pragma warning restore 1591
