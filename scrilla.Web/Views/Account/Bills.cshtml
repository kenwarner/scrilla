@model scrilla.Web.Controllers.ViewModels.BillsViewModel

@{
  ViewBag.Title = "Bills";
}

<h2>Bills <a title="Add New Bill">+</a></h2>

@{ Html.RenderAction(MVC.Account.AddBill()); }

@if (Model.BillGroups.Count() == 0)
{
  <h4>No bills found.</h4>
}
else
{
  foreach (var billGroup in Model.BillGroups)
  {
    var divClass = billGroup.IsActive ? "" : " class=\"inactive\"";
    <h3><a href="javascript:///" onclick="$('#bill-group-@billGroup.Id').toggle();">@billGroup.Name <span class="meta">(@billGroup.Bills.Count)</span></a></h3>
    <div id="bill-group-@billGroup.Id" @Html.Raw(divClass)>
    @if (billGroup.Bills.Count == 0)
    { 
      <h4>No bills found.</h4>
    }
    else
    {
		var unpaidCutoff = DateTime.Now;
      <table class="bills">
      <thead><tr><th>Name</th><th>Category</th><th>Vendor</th><th>Amount</th><th>Frequency</th><th>Due Next</th><th>Duration</th></tr></thead>
      @foreach (var bill in billGroup.Bills.OrderBy(x => x.DueNext == null ? DateTime.MaxValue : x.DueNext.Timestamp))
      {
        var categoryId = bill.CategoryId.HasValue ? bill.CategoryId.Value.ToString() : "none";
        var categoryName = bill.Category == null ? "Uncategorized" : bill.Category.CategoryGroup.Name + " : " + bill.Category.Name;
        var vendorId = bill.VendorId.HasValue ? bill.VendorId.Value.ToString() : "none";
        var vendorName = bill.Vendor == null ? "No Vendor" : bill.Vendor.Name;
        var classHtml = " class=\"bill-" + bill.Id + "\"";
		var unpaidCount = bill.BillTransactions.Count(x => !x.IsPaid && x.Timestamp < unpaidCutoff);
		var unpaidCountHtml = unpaidCount > 0 ? " (" + unpaidCount + ")" : "";
        <tr@Html.Raw(classHtml)>
        <td>@Html.ActionLink(bill.Name, MVC.Account.Bill(bill.Id))@Html.Raw(unpaidCountHtml)</td>
        <td>@Html.ActionLink(categoryName, MVC.Account.Transactions(null, null, categoryId))</td>
        <td>@Html.ActionLink(vendorName, MVC.Account.Transactions(null, vendorId))</td>
        <td>@bill.Amount.ToCurrency()</td>
        <td>@scrilla.Data.Domain.Bill.AvailableFrequencies[bill.RecurrenceFrequency]</td>
        <td>
        @if (bill.DueNext != null)
        {
          @bill.DueNext.Timestamp.ToUrlDate();
        }
        </td>
        <td>@bill.StartDate.ToUrlDate() to @bill.EndDate.ToUrlDate()</td>
        </tr>
      }
      </table>
    }
    </div>
  }
}

<div style="margin-top:20px;">
@{ Html.RenderAction(MVC.Account.BillTransactions()); }
</div>