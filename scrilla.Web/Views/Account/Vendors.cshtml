@model scrilla.Web.Controllers.ViewModels.VendorsViewModel

@{
  string urlFrom = Model.UrlFrom.HasValue ? Model.UrlFrom.Value.ToUrlDate() : null;
  string urlTo = Model.UrlTo.HasValue ? Model.UrlTo.Value.ToUrlDate() : null;

  if (Model.FromMonth == Model.ToMonth)
  {
    ViewBag.Title = "Vendors for " + Model.From.ToString("MMMM yyyy");
  }
  else if (Model.FromMonth.Month == 1 && Model.ToMonth.Month == 12 && Model.ToMonth.Year == Model.FromMonth.Year)
  {
    ViewBag.Title = "Vendors for " + Model.From.ToString("yyyy");
  }
  else
  {
    ViewBag.Title = "Vendors from " + Model.From.ToString("MMMM yyyy") + " to " + Model.To.ToString("MMMM yyyy");
  }
}

<script>
  @Html.Raw("var monthNavUrl = 'Vendors';")
</script>

<h2>@ViewBag.Title <a title="Add New Vendor">+</a></h2>

@{ Html.RenderAction(MVC.Account.AddVendor()); }

@{
  DateTime maxMonth = new DateTime(2012, 12, 1);
  <div style="display:inline-block;position:relative;">
  <table class="month-nav">
  @for (DateTime date = new DateTime(2008, 1, 1); date <= maxMonth; date = date.AddMonths(1))
  {
    var tdClass = (date >= Model.FromMonth && date <= Model.ToMonth) ? " class=\"selected\"" : "";
    if (date.Month == 1)
    {
      @Html.Raw("<tr>");
      <td class="year">@Html.ActionLink(date.Year.ToString(), MVC.Account.Vendors(date.ToUrlDate(), date.AddYears(1).AddDays(-1).ToUrlDate()))</td>
    }
    <td@{Html.Raw(tdClass);} data-from="@date.ToUrlDate()" data-to="@date.AddMonths(1).AddDays(-1).ToUrlDate()">@Html.ActionLink(date.ToString("MMM"), MVC.Account.Vendors(date.ToUrlDate(), date.AddMonths(1).AddDays(-1).ToUrlDate()), new { title = date.ToString("MMMM yyy") })</td>
    if (date.Month == 12)
    { 
      @Html.Raw("</tr>");
    }
  }
  </table>
  <a id="month-nav-link"></a>
  </div>
}


<table id="vendors">
@{
  Dictionary<DateTime, decimal> monthlyTotals = new Dictionary<DateTime, decimal>();

  <thead><tr class="months"><th>Vendor</th><th>Default Category</th>
  @for (DateTime cur = Model.ToMonth; cur >= Model.FromMonth; cur = cur.AddMonths(-1))
  {
    <th title="@cur.ToString("MMMM yyyy")">@Html.ActionLink(cur.ToString("MMMM"), MVC.Account.Vendors(cur.ToUrlDate(), cur.AddMonths(1).AddDays(-1).ToUrlDate()))</th>
  }
  <th>Total</th></tr></thead>
  
  foreach (var vt in Model.VendorTotals)
  {
    string urlVendorId = vt.Vendor == null ? null : (vt.Vendor.Id == 0 ? "none" : vt.Vendor.Id.ToString());
    <tr>
    <td>@if(vt.Vendor.Id == 0) { @Html.ActionLink("None", MVC.Account.Transactions(null, "none", null)); } else { @Html.ActionLink(vt.Vendor.Name, MVC.Account.Vendor((vt.Vendor.Id))); }</td>
    <td>@if (vt.Vendor.DefaultCategoryId.HasValue) { @Html.ActionLink(vt.Vendor.DefaultCategory.Name, MVC.Account.Category(vt.Vendor.DefaultCategoryId.Value)); }</td>
    @for (DateTime cur = Model.ToMonth; cur >= Model.FromMonth; cur = cur.AddMonths(-1))
    {
      decimal total = vt.Totals[cur];
      decimal monthBalance;
      monthlyTotals.TryGetValue(cur, out monthBalance);
      monthlyTotals[cur] = monthBalance + total;
      <td>@if (total != 0) { @Html.ActionLink(total.ToCurrency(), MVC.Account.Transactions(null, urlVendorId, null, cur.ToUrlDate(), cur.AddMonths(1).AddDays(-1).ToUrlDate())); }</td>
    }
    <td class="total">@vt.Totals.Sum(x => x.Value).ToCurrency()</td>
    </tr>
  } 
  
  <tr><td class="total">Totals</td>
  @for (DateTime cur = Model.ToMonth; cur >= Model.FromMonth; cur = cur.AddMonths(-1))
  { 
    <td class="total">@monthlyTotals[cur].ToCurrency()</td>
  }
  <td class="total">@monthlyTotals.Sum(x => x.Value).ToCurrency()</td>
  </tr>

}
</table>